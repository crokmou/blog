@function rem($size) {
  $remSize: $size / 10;
  @return #{$remSize}rem;
}

// Colors
$black: hsl(0,0%,0%);
$gray-15: hsl(0,0%,15%);
$gray-30: hsl(0,0%,30%);
$gray-45: hsl(0,0%,45%);
$gray-60: hsl(0,0%,60%);
$gray-85: hsl(0,0%,85%);
$white: hsl(0,0%,100%);

$brand-info: #000;
$brand-primary: #f5f6e5;
$brand-primary-light: #fafaf2;
$brand-primary-dark: darken($brand-primary, 5%);
$brand-primary-darker: #a2a495;
$brand-primary-darkest: #8b7861;
$brand-secondary: #e9487a;
$brand-danger: hsl(0, 67%, 50%);

// Fonts
$oswald: 'Oswald', sans-serif;
$roboto: 'Roboto', sans-serif;

// Spaces
$global-spacing: 20px;
$global-width: 1200px;

// RESPONSIVE
$breakpoints: (
  'small': (min-width: 560px),
  'medium': (min-width: 769px),
  'large': (min-width: 1024px),
  'huge': (min-width: 1300px),
);

@mixin respond-to($breakpoint) {
  $raw-query: map-get($breakpoints, $breakpoint);

  @if $raw-query {
    $query: if(type-of($raw-query) == 'string', unquote($raw-query), inspect($raw-query));

    @media #{$query} {
      @content;
    }
  } @else {
    @error 'No value found for `#{$breakpoint}`. '
         + 'Please make sure it is defined in `$breakpoints` map.';
  }
}

@mixin tile-shadow() {
  box-shadow: 0 20px 60px -25px rgba(0, 0, 0, .8);
}

@mixin text-shadow($width, $color) {
  $shadow: 0 0 0 transparent;
  $i: 0;
  @while ($i < $width) {
    $i: $i + 1;
    $j: 0;
    @while ($j < 2) {
      $j: $j + 1;
      @for $k from 1 through 3 {
        $x: 0;
        $y: 0;
        @if ($k == 1) {
          $x: $i;
        }
        @if ($k == 2) {
          $y: $i;
        }
        @if ($k == 3) {
          $x: $i;
          $y: $i;
        }
        @if ($j != 1) {
          $x: $x * (0 - 1);
          $y: $y * (0 - 1);
        }
        $shadow: #{$shadow}, #{$x}px #{$y}px #{$width}px $color;
      }
    }
  }
  text-shadow: $shadow;
  @media screen and (-webkit-min-device-pixel-ratio: 0) {
    text-shadow: none;
    -webkit-text-stroke: #{$width}px $color;
  }
}
